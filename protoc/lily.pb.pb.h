// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lily.pb

#ifndef PROTOBUF_lily_2epb__INCLUDED
#define PROTOBUF_lily_2epb__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace lilymsg {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_lily_2epb();
void protobuf_AssignDesc_lily_2epb();
void protobuf_ShutdownFile_lily_2epb();

class MsgHeader;
class AuthCode;
class CSRegister;
class SCRegister;
class MsgBody;
class lilymsg;

enum Status {
  SUCCESS = 0,
  FAIL = 1
};
bool Status_IsValid(int value);
const Status Status_MIN = SUCCESS;
const Status Status_MAX = FAIL;
const int Status_ARRAYSIZE = Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_descriptor();
inline const ::std::string& Status_Name(Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_descriptor(), value);
}
inline bool Status_Parse(
    const ::std::string& name, Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status>(
    Status_descriptor(), name, value);
}
enum MsgType {
  AUTHCODE = 100,
  CS_REGISTER = 1000,
  SC_REGISTER = 1001
};
bool MsgType_IsValid(int value);
const MsgType MsgType_MIN = AUTHCODE;
const MsgType MsgType_MAX = SC_REGISTER;
const int MsgType_ARRAYSIZE = MsgType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgType_descriptor();
inline const ::std::string& MsgType_Name(MsgType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgType_descriptor(), value);
}
inline bool MsgType_Parse(
    const ::std::string& name, MsgType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgType>(
    MsgType_descriptor(), name, value);
}
// ===================================================================

class MsgHeader : public ::google::protobuf::Message {
 public:
  MsgHeader();
  virtual ~MsgHeader();
  
  MsgHeader(const MsgHeader& from);
  
  inline MsgHeader& operator=(const MsgHeader& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgHeader& default_instance();
  
  void Swap(MsgHeader* other);
  
  // implements Message ----------------------------------------------
  
  MsgHeader* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgHeader& from);
  void MergeFrom(const MsgHeader& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .lilymsg.MsgType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline lilymsg::MsgType type() const;
  inline void set_type(lilymsg::MsgType value);
  
  // @@protoc_insertion_point(class_scope:lilymsg.MsgHeader)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_lily_2epb();
  friend void protobuf_AssignDesc_lily_2epb();
  friend void protobuf_ShutdownFile_lily_2epb();
  
  void InitAsDefaultInstance();
  static MsgHeader* default_instance_;
};
// -------------------------------------------------------------------

class AuthCode : public ::google::protobuf::Message {
 public:
  AuthCode();
  virtual ~AuthCode();
  
  AuthCode(const AuthCode& from);
  
  inline AuthCode& operator=(const AuthCode& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthCode& default_instance();
  
  void Swap(AuthCode* other);
  
  // implements Message ----------------------------------------------
  
  AuthCode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthCode& from);
  void MergeFrom(const AuthCode& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 phonenum = 1;
  inline bool has_phonenum() const;
  inline void clear_phonenum();
  static const int kPhonenumFieldNumber = 1;
  inline ::google::protobuf::int32 phonenum() const;
  inline void set_phonenum(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:lilymsg.AuthCode)
 private:
  inline void set_has_phonenum();
  inline void clear_has_phonenum();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 phonenum_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_lily_2epb();
  friend void protobuf_AssignDesc_lily_2epb();
  friend void protobuf_ShutdownFile_lily_2epb();
  
  void InitAsDefaultInstance();
  static AuthCode* default_instance_;
};
// -------------------------------------------------------------------

class CSRegister : public ::google::protobuf::Message {
 public:
  CSRegister();
  virtual ~CSRegister();
  
  CSRegister(const CSRegister& from);
  
  inline CSRegister& operator=(const CSRegister& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSRegister& default_instance();
  
  void Swap(CSRegister* other);
  
  // implements Message ----------------------------------------------
  
  CSRegister* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSRegister& from);
  void MergeFrom(const CSRegister& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 phonenum = 1;
  inline bool has_phonenum() const;
  inline void clear_phonenum();
  static const int kPhonenumFieldNumber = 1;
  inline ::google::protobuf::int32 phonenum() const;
  inline void set_phonenum(::google::protobuf::int32 value);
  
  // required int32 code = 2;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 2;
  inline ::google::protobuf::int32 code() const;
  inline void set_code(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:lilymsg.CSRegister)
 private:
  inline void set_has_phonenum();
  inline void clear_has_phonenum();
  inline void set_has_code();
  inline void clear_has_code();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 phonenum_;
  ::google::protobuf::int32 code_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_lily_2epb();
  friend void protobuf_AssignDesc_lily_2epb();
  friend void protobuf_ShutdownFile_lily_2epb();
  
  void InitAsDefaultInstance();
  static CSRegister* default_instance_;
};
// -------------------------------------------------------------------

class SCRegister : public ::google::protobuf::Message {
 public:
  SCRegister();
  virtual ~SCRegister();
  
  SCRegister(const SCRegister& from);
  
  inline SCRegister& operator=(const SCRegister& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SCRegister& default_instance();
  
  void Swap(SCRegister* other);
  
  // implements Message ----------------------------------------------
  
  SCRegister* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SCRegister& from);
  void MergeFrom(const SCRegister& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .lilymsg.Status status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline lilymsg::Status status() const;
  inline void set_status(lilymsg::Status value);
  
  // optional string msg = 2;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 2;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const char* value, size_t size);
  inline ::std::string* mutable_msg();
  inline ::std::string* release_msg();
  
  // optional string token = 3;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 3;
  inline const ::std::string& token() const;
  inline void set_token(const ::std::string& value);
  inline void set_token(const char* value);
  inline void set_token(const char* value, size_t size);
  inline ::std::string* mutable_token();
  inline ::std::string* release_token();
  
  // @@protoc_insertion_point(class_scope:lilymsg.SCRegister)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_msg();
  inline void clear_has_msg();
  inline void set_has_token();
  inline void clear_has_token();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* msg_;
  ::std::string* token_;
  int status_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_lily_2epb();
  friend void protobuf_AssignDesc_lily_2epb();
  friend void protobuf_ShutdownFile_lily_2epb();
  
  void InitAsDefaultInstance();
  static SCRegister* default_instance_;
};
// -------------------------------------------------------------------

class MsgBody : public ::google::protobuf::Message {
 public:
  MsgBody();
  virtual ~MsgBody();
  
  MsgBody(const MsgBody& from);
  
  inline MsgBody& operator=(const MsgBody& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgBody& default_instance();
  
  void Swap(MsgBody* other);
  
  // implements Message ----------------------------------------------
  
  MsgBody* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgBody& from);
  void MergeFrom(const MsgBody& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .lilymsg.AuthCode authcode = 1;
  inline bool has_authcode() const;
  inline void clear_authcode();
  static const int kAuthcodeFieldNumber = 1;
  inline const ::lilymsg::AuthCode& authcode() const;
  inline ::lilymsg::AuthCode* mutable_authcode();
  inline ::lilymsg::AuthCode* release_authcode();
  
  // optional .lilymsg.CSRegister csregister = 2;
  inline bool has_csregister() const;
  inline void clear_csregister();
  static const int kCsregisterFieldNumber = 2;
  inline const ::lilymsg::CSRegister& csregister() const;
  inline ::lilymsg::CSRegister* mutable_csregister();
  inline ::lilymsg::CSRegister* release_csregister();
  
  // optional .lilymsg.SCRegister scregister = 3;
  inline bool has_scregister() const;
  inline void clear_scregister();
  static const int kScregisterFieldNumber = 3;
  inline const ::lilymsg::SCRegister& scregister() const;
  inline ::lilymsg::SCRegister* mutable_scregister();
  inline ::lilymsg::SCRegister* release_scregister();
  
  // @@protoc_insertion_point(class_scope:lilymsg.MsgBody)
 private:
  inline void set_has_authcode();
  inline void clear_has_authcode();
  inline void set_has_csregister();
  inline void clear_has_csregister();
  inline void set_has_scregister();
  inline void clear_has_scregister();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::lilymsg::AuthCode* authcode_;
  ::lilymsg::CSRegister* csregister_;
  ::lilymsg::SCRegister* scregister_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_lily_2epb();
  friend void protobuf_AssignDesc_lily_2epb();
  friend void protobuf_ShutdownFile_lily_2epb();
  
  void InitAsDefaultInstance();
  static MsgBody* default_instance_;
};
// -------------------------------------------------------------------

class lilymsg : public ::google::protobuf::Message {
 public:
  lilymsg();
  virtual ~lilymsg();
  
  lilymsg(const lilymsg& from);
  
  inline lilymsg& operator=(const lilymsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const lilymsg& default_instance();
  
  void Swap(lilymsg* other);
  
  // implements Message ----------------------------------------------
  
  lilymsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const lilymsg& from);
  void MergeFrom(const lilymsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .lilymsg.MsgHeader header = 1;
  inline bool has_header() const;
  inline void clear_header();
  static const int kHeaderFieldNumber = 1;
  inline const ::lilymsg::MsgHeader& header() const;
  inline ::lilymsg::MsgHeader* mutable_header();
  inline ::lilymsg::MsgHeader* release_header();
  
  // required .lilymsg.MsgBody body = 2;
  inline bool has_body() const;
  inline void clear_body();
  static const int kBodyFieldNumber = 2;
  inline const ::lilymsg::MsgBody& body() const;
  inline ::lilymsg::MsgBody* mutable_body();
  inline ::lilymsg::MsgBody* release_body();
  
  // @@protoc_insertion_point(class_scope:lilymsg.lilymsg)
 private:
  inline void set_has_header();
  inline void clear_has_header();
  inline void set_has_body();
  inline void clear_has_body();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::lilymsg::MsgHeader* header_;
  ::lilymsg::MsgBody* body_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_lily_2epb();
  friend void protobuf_AssignDesc_lily_2epb();
  friend void protobuf_ShutdownFile_lily_2epb();
  
  void InitAsDefaultInstance();
  static lilymsg* default_instance_;
};
// ===================================================================


// ===================================================================

// MsgHeader

// required .lilymsg.MsgType type = 1;
inline bool MsgHeader::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgHeader::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgHeader::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgHeader::clear_type() {
  type_ = 100;
  clear_has_type();
}
inline lilymsg::MsgType MsgHeader::type() const {
  return static_cast< lilymsg::MsgType >(type_);
}
inline void MsgHeader::set_type(lilymsg::MsgType value) {
  GOOGLE_DCHECK(lilymsg::MsgType_IsValid(value));
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// AuthCode

// required int32 phonenum = 1;
inline bool AuthCode::has_phonenum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuthCode::set_has_phonenum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuthCode::clear_has_phonenum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuthCode::clear_phonenum() {
  phonenum_ = 0;
  clear_has_phonenum();
}
inline ::google::protobuf::int32 AuthCode::phonenum() const {
  return phonenum_;
}
inline void AuthCode::set_phonenum(::google::protobuf::int32 value) {
  set_has_phonenum();
  phonenum_ = value;
}

// -------------------------------------------------------------------

// CSRegister

// required int32 phonenum = 1;
inline bool CSRegister::has_phonenum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSRegister::set_has_phonenum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSRegister::clear_has_phonenum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSRegister::clear_phonenum() {
  phonenum_ = 0;
  clear_has_phonenum();
}
inline ::google::protobuf::int32 CSRegister::phonenum() const {
  return phonenum_;
}
inline void CSRegister::set_phonenum(::google::protobuf::int32 value) {
  set_has_phonenum();
  phonenum_ = value;
}

// required int32 code = 2;
inline bool CSRegister::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSRegister::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSRegister::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSRegister::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 CSRegister::code() const {
  return code_;
}
inline void CSRegister::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
}

// -------------------------------------------------------------------

// SCRegister

// required .lilymsg.Status status = 1;
inline bool SCRegister::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SCRegister::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SCRegister::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SCRegister::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline lilymsg::Status SCRegister::status() const {
  return static_cast< lilymsg::Status >(status_);
}
inline void SCRegister::set_status(lilymsg::Status value) {
  GOOGLE_DCHECK(lilymsg::Status_IsValid(value));
  set_has_status();
  status_ = value;
}

// optional string msg = 2;
inline bool SCRegister::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SCRegister::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SCRegister::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SCRegister::clear_msg() {
  if (msg_ != &::google::protobuf::internal::kEmptyString) {
    msg_->clear();
  }
  clear_has_msg();
}
inline const ::std::string& SCRegister::msg() const {
  return *msg_;
}
inline void SCRegister::set_msg(const ::std::string& value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void SCRegister::set_msg(const char* value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void SCRegister::set_msg(const char* value, size_t size) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SCRegister::mutable_msg() {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  return msg_;
}
inline ::std::string* SCRegister::release_msg() {
  clear_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = msg_;
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string token = 3;
inline bool SCRegister::has_token() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SCRegister::set_has_token() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SCRegister::clear_has_token() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SCRegister::clear_token() {
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    token_->clear();
  }
  clear_has_token();
}
inline const ::std::string& SCRegister::token() const {
  return *token_;
}
inline void SCRegister::set_token(const ::std::string& value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void SCRegister::set_token(const char* value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void SCRegister::set_token(const char* value, size_t size) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SCRegister::mutable_token() {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  return token_;
}
inline ::std::string* SCRegister::release_token() {
  clear_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = token_;
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// MsgBody

// optional .lilymsg.AuthCode authcode = 1;
inline bool MsgBody::has_authcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgBody::set_has_authcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgBody::clear_has_authcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgBody::clear_authcode() {
  if (authcode_ != NULL) authcode_->::lilymsg::AuthCode::Clear();
  clear_has_authcode();
}
inline const ::lilymsg::AuthCode& MsgBody::authcode() const {
  return authcode_ != NULL ? *authcode_ : *default_instance_->authcode_;
}
inline ::lilymsg::AuthCode* MsgBody::mutable_authcode() {
  set_has_authcode();
  if (authcode_ == NULL) authcode_ = new ::lilymsg::AuthCode;
  return authcode_;
}
inline ::lilymsg::AuthCode* MsgBody::release_authcode() {
  clear_has_authcode();
  ::lilymsg::AuthCode* temp = authcode_;
  authcode_ = NULL;
  return temp;
}

// optional .lilymsg.CSRegister csregister = 2;
inline bool MsgBody::has_csregister() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgBody::set_has_csregister() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgBody::clear_has_csregister() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgBody::clear_csregister() {
  if (csregister_ != NULL) csregister_->::lilymsg::CSRegister::Clear();
  clear_has_csregister();
}
inline const ::lilymsg::CSRegister& MsgBody::csregister() const {
  return csregister_ != NULL ? *csregister_ : *default_instance_->csregister_;
}
inline ::lilymsg::CSRegister* MsgBody::mutable_csregister() {
  set_has_csregister();
  if (csregister_ == NULL) csregister_ = new ::lilymsg::CSRegister;
  return csregister_;
}
inline ::lilymsg::CSRegister* MsgBody::release_csregister() {
  clear_has_csregister();
  ::lilymsg::CSRegister* temp = csregister_;
  csregister_ = NULL;
  return temp;
}

// optional .lilymsg.SCRegister scregister = 3;
inline bool MsgBody::has_scregister() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgBody::set_has_scregister() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgBody::clear_has_scregister() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgBody::clear_scregister() {
  if (scregister_ != NULL) scregister_->::lilymsg::SCRegister::Clear();
  clear_has_scregister();
}
inline const ::lilymsg::SCRegister& MsgBody::scregister() const {
  return scregister_ != NULL ? *scregister_ : *default_instance_->scregister_;
}
inline ::lilymsg::SCRegister* MsgBody::mutable_scregister() {
  set_has_scregister();
  if (scregister_ == NULL) scregister_ = new ::lilymsg::SCRegister;
  return scregister_;
}
inline ::lilymsg::SCRegister* MsgBody::release_scregister() {
  clear_has_scregister();
  ::lilymsg::SCRegister* temp = scregister_;
  scregister_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// lilymsg

// required .lilymsg.MsgHeader header = 1;
inline bool lilymsg::has_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void lilymsg::set_has_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void lilymsg::clear_has_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void lilymsg::clear_header() {
  if (header_ != NULL) header_->::lilymsg::MsgHeader::Clear();
  clear_has_header();
}
inline const ::lilymsg::MsgHeader& lilymsg::header() const {
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::lilymsg::MsgHeader* lilymsg::mutable_header() {
  set_has_header();
  if (header_ == NULL) header_ = new ::lilymsg::MsgHeader;
  return header_;
}
inline ::lilymsg::MsgHeader* lilymsg::release_header() {
  clear_has_header();
  ::lilymsg::MsgHeader* temp = header_;
  header_ = NULL;
  return temp;
}

// required .lilymsg.MsgBody body = 2;
inline bool lilymsg::has_body() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void lilymsg::set_has_body() {
  _has_bits_[0] |= 0x00000002u;
}
inline void lilymsg::clear_has_body() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void lilymsg::clear_body() {
  if (body_ != NULL) body_->::lilymsg::MsgBody::Clear();
  clear_has_body();
}
inline const ::lilymsg::MsgBody& lilymsg::body() const {
  return body_ != NULL ? *body_ : *default_instance_->body_;
}
inline ::lilymsg::MsgBody* lilymsg::mutable_body() {
  set_has_body();
  if (body_ == NULL) body_ = new ::lilymsg::MsgBody;
  return body_;
}
inline ::lilymsg::MsgBody* lilymsg::release_body() {
  clear_has_body();
  ::lilymsg::MsgBody* temp = body_;
  body_ = NULL;
  return temp;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace lilymsg

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< lilymsg::Status>() {
  return lilymsg::Status_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< lilymsg::MsgType>() {
  return lilymsg::MsgType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_lily_2epb__INCLUDED
